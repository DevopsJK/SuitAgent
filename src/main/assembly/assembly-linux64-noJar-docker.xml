<?xml version="1.0" encoding="UTF-8"?>
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
    <id>linux64-noJar-docker</id>

    <!--"zip" - Creates a ZIP file format
"tar" - Creates a TAR format
"tar.gz" or "tgz" - Creates a gzip'd TAR format
"tar.bz2" or "tbz2" - Creates a bzip'd TAR format
"jar" - Creates a JAR format
"dir" - Creates an exploded directory format
"war" - Creates a WAR format-->
    <formats>
        <format>tar.gz</format>
    </formats>

    <fileSets>
        <fileSet>
            <directory>${project.basedir}/src/main/resources_ext/bin</directory>
            <filtered>true</filtered>
            <fileMode>0755</fileMode>
            <directoryMode>0755</directoryMode>
            <outputDirectory>bin</outputDirectory>
        </fileSet>

        <fileSet>
            <directory>${project.basedir}/src/main/resources_ext/conf</directory>
            <outputDirectory>conf</outputDirectory>
        </fileSet>

        <fileSet>
            <directory>${project.basedir}/src/main/resources_ext/lib/tools-linux64</directory>
            <outputDirectory>lib</outputDirectory>
        </fileSet>

        <fileSet>
            <directory>${project.basedir}/src/main/resources_ext/logs</directory>
            <outputDirectory>logs</outputDirectory>
        </fileSet>

        <fileSet>
            <directory>${project.basedir}/src/main/resources_ext/falcon/linux64/agent</directory>
            <outputDirectory>falcon/agent/</outputDirectory>
        </fileSet>

        <fileSet>
            <directory>${project.basedir}/src/main/resources_ext/falcon/linux64/agent-docker</directory>
            <outputDirectory>falcon/agent/</outputDirectory>
        </fileSet>

    </fileSets>

    <dependencySets>

        <dependencySet>
            <useProjectArtifact>true</useProjectArtifact>
            <outputDirectory>lib</outputDirectory>
            <!-- 将scope为runtime的依赖包打包到lib目录下。 -->
            <scope>runtime</scope>
        </dependencySet>

    </dependencySets>

</assembly>